#include<CUnit/Basic.h>
#include"listeDeMotCorrige.h"
#include "motCorrige.h"
#define TRUE 1
#define FALSE 0

int init_success(void){ 
    return 0 ; 
}

int clean_success(void){ 
    return 0 ; 
}

void testAjouter(void){
  ListeDeMotCorrige listeInit;
  MotCorrige motCorrige;
  Mot mot;
  
  motCorrige = Un_motCorrige();
  MotCorrige_fixerMot(&motCorrige,mot);
  
  ListeDeMotCorrige_ajouter(&listeInit,
    CU_ASSERT_TRUE((a==2) && (b==1)) ;
}

int main(int argc, char** argv){
  
  CU_pSuite pSuite = NULL;

  if (CUE_SUCCESS != CU_initialize_registry())
    return CU_get_error();

  pSuite = CU_add_suite("Tests Liste de Mot Corrige", init_success, clean_success);
  if (NULL == pSuite) {
    CU_cleanup_registry();
    return CU_get_error();
  }

  if  (  (NULL == CU_add_test(pSuite, "Ajouter", testAjouter))
	 // || (NULL == CU_add_test(pSuite, "tri par min successif", testTriParMinSuccessif))
   
      ){
      CU_cleanup_registry() ;
      return CU_get_error() ;
    }

  CU_basic_set_mode(CU_BRM_VERBOSE) ;
  CU_basic_run_tests() ;
  printf("\n") ;
  CU_basic_show_failures(CU_get_failure_list()) ;
  printf("\n\n") ;

  CU_cleanup_registry() ;
  return CU_get_error() ;
  return 0 ;
}
